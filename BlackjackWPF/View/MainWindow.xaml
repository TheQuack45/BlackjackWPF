<Window x:Name="blackjackWindow" x:Class="BlackjackWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BlackjackWPF"
        xmlns:ViewModel="clr-namespace:BlackjackWPF.ViewModel"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        Title="Blackjack" Height="492" Width="650" ResizeMode="NoResize">
    <Window.DataContext>
        <ViewModel:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Style TargetType="WrapPanel" x:Key="cardListWrapPanel">
            <Setter Property="Margin" Value="10,10,10,10"/>
            <Setter Property="Orientation" Value="Horizontal"/>
        </Style>
        <Style TargetType="Border" x:Key="cardBorder">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="9,9,0,0"/>
        </Style>
        <Style TargetType="Image" x:Key="cardImageStyle">
            <Setter Property="Width" Value="70"/>
            <Setter Property="Height" Value="90"/>
            <Setter Property="Stretch" Value="Uniform"/>
            <Setter Property="Source" Value="{Binding Path=ImageSource, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="ToolTip" Value="{Binding Path=CardName, UpdateSourceTrigger=PropertyChanged}"/>
        </Style>
        <Style TargetType="Label" x:Key="displayLabel">
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Visibility" Value="{Binding Path=IsDisplayLabelVisible, UpdateSourceTrigger=PropertyChanged}"/>
        </Style>
        <Style TargetType="ItemsControl" x:Key="dealerItemsControlBorder">
            <Setter Property="BorderBrush" Value="{Binding Path=DealerBorderColor, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>
        <Style TargetType="ItemsControl" x:Key="playerItemsControlBorder">
            <Setter Property="BorderBrush" Value="{Binding Path=PlayerBorderColor, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>
        <Style TargetType="Label" x:Key="statusLabel">
            <Setter Property="Margin" Value="50, 0, 50, 0"/>
            <Setter Property="Content" Value="{Binding Path=StatusLabelText, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding ResetGameCommand}" Key="R" Modifiers="Ctrl"/>
    </Window.InputBindings>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding StartupCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <DockPanel>
            <GroupBox x:Name="dealerBox" Header="{Binding Path=DealerBoxHeader, UpdateSourceTrigger=PropertyChanged}" Margin="10,10,10,0" DockPanel.Dock="Top" MinHeight="150">
                <UniformGrid>
                    <ItemsControl Name="dealerCardsItemControl" Style="{StaticResource dealerItemsControlBorder}" ItemsSource="{Binding Path=DealerCardsList}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Style="{StaticResource cardListWrapPanel}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Style="{StaticResource cardBorder}">
                                    <Image Style="{StaticResource cardImageStyle}"/>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </UniformGrid>
            </GroupBox>
            <Grid Margin="10,10,10,0" DockPanel.Dock="Top" MinHeight="25" HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Style="{StaticResource statusLabel}"/>
            </Grid>
            <GroupBox x:Name="playerBox" Header="{Binding Path=PlayerBoxHeader, UpdateSourceTrigger=PropertyChanged}" Margin="10,10,10,0" DockPanel.Dock="Top" MinHeight="150">
                <UniformGrid>
                    <ItemsControl Name="playerCardsItemControl" Style="{StaticResource playerItemsControlBorder}" ItemsSource="{Binding Path=PlayerCardsList}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Style="{StaticResource cardListWrapPanel}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border Style="{StaticResource cardBorder}">
                                    <Image Style="{StaticResource cardImageStyle}"/>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </UniformGrid>
            </GroupBox>
            <Grid Margin="10,10,10,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding ElementName=standButton, Path=Width}"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="{Binding ElementName=hitButton, Path=Width}"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="restartButton" Grid.Column="1" Content="_Restart" Visibility="{Binding IsRestartVisible, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsRestartEnabled, UpdateSourceTrigger=PropertyChanged}" Command="{Binding RestartGameCommand}"/>
                <Button x:Name="startButton" Grid.Column="1" Content="_Start" Visibility="{Binding IsStartVisible, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsStartEnabled, UpdateSourceTrigger=PropertyChanged}" Command="{Binding StartGameCommand}"/>
                <Button x:Name="standButton" Grid.Column="0" Content="S_tand" Width="200" IsEnabled="{Binding IsStandReady, UpdateSourceTrigger=PropertyChanged}" Command="{Binding StandCommand}"/>
                <DockPanel DockPanel.Dock="Left" Grid.Column="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{Binding ElementName=resetButton, Path=Width}"/>
                        </Grid.ColumnDefinitions>
                        <DockPanel Margin="0,0,0,0" Grid.Column="0">
                            <Label Style="{StaticResource displayLabel}" DockPanel.Dock="Top" Content="{Binding WinsDisplay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label Style="{StaticResource displayLabel}" DockPanel.Dock="Top" Content="{Binding TiesDisplay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label Style="{StaticResource displayLabel}" DockPanel.Dock="Bottom" Content="{Binding LossesDisplay, UpdateSourceTrigger=PropertyChanged}"/>
                        </DockPanel>
                        <Button x:Name="resetButton" Grid.Column="1" Content="Reset" Width="70" Visibility="{Binding IsResetVisible, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding IsResetEnabled, UpdateSourceTrigger=PropertyChanged}" Command="{Binding ResetGameCommand}"/>
                    </Grid>
                </DockPanel>
                <Button x:Name="hitButton" Grid.Column="2" Content="_Hit" Width="200" IsEnabled="{Binding IsHitReady, UpdateSourceTrigger=PropertyChanged}" Command="{Binding HitCommand}"/>
            </Grid>
        </DockPanel>
    </Grid>
</Window>
